# Sctipted by:
#   Po-temkin
#
# Tested on:
#   Ansible: 2.9
#   Splunk Enterprise for Windows:
#     Version: 9.0.0.1
#     Build: 9e907cedecb1
#   Windows Server:
#     Version: 2019
#
#  Name:
#    spl_deploy.yml
#
#  Description:
#    Installing and configuring Splunk Enterprise
#
#  Input:
#    -
#
#  Output:
#    -

---

- name: 'SPL Deploy :: Installing and configuring Splunk'
  hosts: spl

  tasks:

#Stage 1 :: Installing Splunk instances
    - import_tasks: ./spl_install_spl.yml
      vars:
        #spl_home_dir # Path to Splunk home dir; Taken from inventory
        spl_install_shortcut: 0 # Specify whether or not creating shortcut on desktop and Start Menu
        spl_installer_name: 'SPL.msi' # Name of Splunk installer
        spl_installer_location: '\\example\folder\Splunk' # Installer location
        #spl_username # Splunk admin account; Taken from inventory
        #spl_password # Password of admin account

 #Stage 2 :: Addining Splunk to PATH   
    - import_tasks: ./spl_add_path.yml
      vars:
        #spl_home_dir # Path to Splunk home dir; Taken from inventory

#Stage 3 :: Installing Psini module
    - import_tasks: ./windows/powershell/powershell_install_psini.yml
      vars:
        powershell_psini_zip: 'Psini.zip' # ZIP archive with Psini module
        powershell_psini_location: '\\example\folder\Powershell\Modules' # ZIP archive location

#Stage 4 :: Changing index store
    - import_tasks: ./spl_change_index_store.yml
      vars:
        #spl_home_dir # Path to Splunk home dir; Taken from inventory
        spl_splunkdb_new: 'E:\splunk' # New location of splunkdb
        spl_skip_restart: 0 # 1 - yes; 0 - no; Restart require but you can skip it

#Stage 5 :: Configuring Indexer cluster
    - name: 'SPL Deploy :: Collecting Indexer cluster key'
      set_fact:
        spl_idxc_key: 'password'
      run_once: true

#Stage 5.1 :: Configuring Manager node
    - import_tasks: ./spl_configure_manager_node.yml
      vars:
        spl_idxc_rep_factor: 2 # Replication factor of indexer cluster; Equals number of idx instances in cluster
        #spl_home_dir # Path to Splunk home dir; Taken from inventory
        spl_search_factor: 2 # Search factor of indexer cluster; Amount of searchable bucket copies
        spl_idxc_label: 'idxcluster0' # Name of Indexer cluster
        #spl_home_dir # Path to Splunk home dir; Taken from inventory
        #spl_idxc_key # Indexer cluster security key; Taken from previous task
        #spl_username: # Splunk admin account; Collected on Stage 1
        #spl_password: # Collected on Stage 1
        spl_skip_restart: 0 # 1 - yes; 0 - no; Restart require but you can skip it
      when: group_names | select('regex', '^.*_mn$') | list | count > 0

#Stage 5.2 :: Configuring Indexer cluster members
    - import_tasks: ./spl_configure_idxc_member.yml
      vars:
        #spl_idxс_key # Indexer cluster security key; Taken from previous task
        spl_idxc_rep_port: 9887 # Indexer cluster replication port
        spl_management_port: 8089 # Splunk management port
        #spl_username: # Splunk admin account; Collected on Stage 1
        #spl_password: # Collected on Stage 1
        spl_skip_restart: 0 # 1 - yes; 0 - no; Restart require but you can skip it
      when: group_names | select('regex', '^.*_idx$') | list | count > 0

#Stage 6 :: Configuring Deployer    
    - name: 'SPL Deploy :: Collecting Search head cluster key'
      set_fact:
        spl_shc_key: 'password'
      run_once: true

    - import_tasks: ./spl_configure_deployer.yml
      vars:
        #spl_home_dir # Path to Splunk home dir; Taken from inventory
        spl_shc_label: 'shcluster0'
        #spl_shc_key # Search Head cluster security key; Taken from previous task
        spl_skip_restart: 0 # 1 - yes; 0 - no; Restart require but you can skip it
      when: group_names | select('regex', '^.*_shd$') | list | count > 0

#Stage 7 :: Configuring Search Head cluster
#Stage 7.1 :: Configuring Search Head cluster members
    - import_tasks: ./spl_configure_shc_member.yml
      vars:
        #spl_home_dir # Path to Splunk home dir; Taken from inventory
        spl_management_port: 8089 # Splunk management port
        spl_shc_label: 'shcluster0' # Name of Search Head cluster; Must be the same on each cluster member
        spl_shc_rep_factor: 2 # Replication factor of indexer cluster; Equals number of sh instances in cluster
        spl_shc_rep_port: 9777 # Search head cluster replication port
        #spl_shc_key # Search Head cluster security key; Taken from previous task
        #spl_username: # Splunk admin account; Collected on Stage 1
        #spl_password: # Collected on Stage 1
        spl_skip_restart: 0 # 1 - yes; 0 - no; Restart require but you can skip it
      when: group_names | select('regex', '^.*_sh$') | list | count > 0

#Stage 7.2 :: Bringing up Search Head cluster members
    - import_tasks: ./spl_bring_shc_captain.yml
      vars:
        spl_management_port: 8089 # Splunk management port
        #spl_username: # Splunk admin account; Collected on Stage 1
        #spl_password: # Collected on Stage 1
      when: group_names | select('regex', '^.*_sh$') | list | count > 0

#Stage 8 :: Connecting SHC members to IDXC members
    - import_tasks: ./spl_shc_to_idxc.yml
      vars:
        spl_management_port: 8089 # Splunk management port
        #spl_idxс_key Indexer cluster security key; Taken from Stage 5
        #spl_username: # Splunk admin account; Collected on Stage 1
        #spl_password: # Collected on Stage 1
        spl_skip_restart: 0 # 1 - yes; 0 - no; Restart require but you can skip it
      when: group_names | select('regex', '^.*_sh$') | list | count > 0

#Stage 9 :: Disabling unnecessary default apps
    - import_tasks: ./spl_disable_default_app.yml
      vars:
        spl_app_dirs: 'python_upgrade_readiness_app,splunk_essentials_9_0,splunk_secure_gateway'  # Splunk default app directory(s);  Expecting directories list separated by comma
        #spl_home_dir # Path to Splunk home dir; Taken from inventory
        spl_skip_restart: 1

#Stage 10 :: Creating health-check user for Indexers
#Stage 10.1 :: Creating health-check role for Indexers
    - import_tasks: ./spl_create_health_check_role.yml
      vars:
        #spl_home_dir # Path to Splunk home dir; Taken from inventory
        spl_skip_restart: 1
      when: group_names | select('regex', '^.*_idx$') | list | count > 0

#Stage 10.2 :: Creating health-check user for Indexers
    - name: 'SPL Deploy :: Collecting health-check user data'
      set_fact:
        spl_local_user: 'spluser' # Splunk admin account;
        spl_local_password: 'password'
      run_once: true

    - import_tasks: ./spl_create_local_user.yml
      vars:
        #spl_local_user # Username of new user; Taken from previous task
        #spl_local_password # aken from previous task
        spl_local_role: 'health_check' # Role name which exist
        #spl_username: # Splunk admin account; Collected on Stage 1
        #spl_password: # Collected on Stage 1
      when: group_names | select('regex', '^.*_idx$') | list | count > 0

#Stage 11 :: Setting LDAP
    - name: 'SPL :: Collecting SPL LDAP credentials'
      set_fact:
        spl_ldap_username: 'ldap_user' # Splunk admin account;
        spl_ldap_password: 'password'
      run_once: true

    - name: 'SPL :: Collecting LDAP stanza names'
      set_fact:
        spl_ldap_names:
          - { name: 'Primary', host: '{{ spl_ldap_server_name1 }}'}
          - { name: 'Secondary', host: '{{ spl_ldap_server_name2 }}'}

#Stage 11.1 :: Setting LDAP
    - include_tasks: ./spl_ldap_add_auth.yml
      vars:
        #spl_home_dir # Path to Splunk home dir; Taken from inventory
        spl_ldap_name: '{{ item_outer.name }}' # LDAP stanza name
        spl_ldap_ssl_enabled: 1 # 0 - disable; 1 - enable
        spl_ldap_anonymous_referrals: 1 # 0 - disable; 1 - enable
        spl_ldap_bind_dn: 'CN={{ spl_ldap_username }},OU=Splunk,OU=SA,OU=Service Accounts,DC=domain,DC=example,DC=com' # LDAP Distinguished Name of the user that retrieves the LDAP entries
        spl_ldap_bind_dn_password: '{{ spl_ldap_password }}'
        spl_ldap_email_attribute: 'mail' # User's email address
        spl_ldap_enable_range_retrieval: 0 # 0 - disable; 1 - enable
        spl_ldap_group_base_dn: 'OU=Delegated,OU=Groups,DC=domain,DC=example,DC=com' # LDAP Distinguished Names of LDAP entries whose subtrees contain the groups
        spl_ldap_group_base_filter: '(objectCategory=group)' # LDAP search filter for groups
        spl_ldap_group_mapping_attribute: 'dn' # Value that group entries use to declare membership
        spl_ldap_group_member_attribute: 'member' # Group member attribute
        spl_ldap_group_name_attribute: 'cn' # Group name attribute
        spl_ldap_host: '{{ item_outer.host }}' # LDAP server name
        spl_ldap_nested_groups: 1 # 0 - disable; 1 - enable
        spl_ldap_network_timeout: 20 # Limits the amount of time a socket polls a connection without activity
        spl_ldap_pagelimit: '-1' # Maximum number of entries to return in each page
        spl_ldap_port: 636 # LDAP server port
        spl_ldap_real_name_attribute: 'displayname' # User's real, human readable name
        spl_ldap_size_limit: 1000 # Limits the amount of entries that the Splunk platform requests in LDAP search
        spl_ldap_time_limit: 15 # Limits the amount of time, in seconds, that the Splunk platform waits for an LDAP search request to complete
        spl_ldap_user_base_dn: DC=domain,DC=example,DC=com # Distinguished names of LDAP entries whose subtrees contain the user
        spl_ldap_user_base_filter: '(&(objectCategory=person)(objectClass=user))' # LDAP search filter for users
        spl_ldap_user_name_attribute: 'samaccountname' # Username attribute
        spl_skip_restart: 1 # 1 - yes; 0 - no; Restart require but you can skip it
      loop: '{{ spl_ldap_names }}'
      loop_control:
        loop_var: item_outer

#Stage 11.2 :: Mapping roles and groups
    - include_tasks: ./spl_ldap_map_roles.yml
      vars:
        #spl_home_dir # Path to Splunk home dir; Taken from inventory
        spl_ldap_name: '{{ item_outer.name }}' # LDAP stanza name
        spl_ldap_admin_group: 'Splunk_Role_Admin'
        spl_ldap_can_delete_group: 'Splunk_Role_Power'
        spl_ldap_power_group: ''
        spl_ldap_user_group: 'Splunk_Role_User'
        spl_ldap_ssr_group: ''
        spl_skip_restart: 1 # 1 - yes; 0 - no; Restart require but you can skip it
      loop: '{{ spl_ldap_names }}'
      loop_control:
        loop_var: item_outer

#Stage 11.3 :: Enabling LDAP auth
    - import_tasks: ./spl_ldap_enable_auth.yml
      vars:
        #spl_home_dir # Path to Splunk home dir; Taken from inventory
        spl_ldap_names_enable: "{{ spl_ldap_names | map(attribute='name') | join(',') }}"
        spl_skip_restart: 1 # 1 - yes; 0 - no; Restart require but you can skip it

#Stage 12 :: Changing admin email
    - import_tasks: ./spl_change_admin_email.yml
      vars:
        spl_admin_email: 'splunkadmins@domain.com' # New value of built-in admin email
        spl_skip_restart: 1 # 1 - yes; 0 - no; Restart require but you can skip it

#Stage 13 :: Enabling SMTP
    - name: 'SPL Deploy :: Collecting SPL credentials'
      set_fact:
        spl_smtp_auth_username: 'smtp_user' # Splunk admin account;
        spl_smtp_auth_password: 'password'
      run_once: true
    
    - import_tasks: ./spl_configure_smtp.yml
      vars:
        #spl_home_dir # Path to Splunk home dir; Taken from inventory
        spl_smtp_allow_domain_list: 'example@domaim.com' # Specifies a list of domains to which users are allowed to send email
        #spl_smtp_auth_username: # STMP user; Taken from previous task
        #spl_smtp_auth_password: # Taken from previous task
        spl_smtp_footer_text: 'This mail generaited by SPLUNK' # Specify an alternate email footer
        spl_smtp_from: 'splunk' # Email address from which the alert originates
        spl_smtp_hostname: 'https://splunk.domain.com:443' # Specifies a value of message hyperlink
        spl_smtp_mailserver: 'smtp.domain.com' # SMTP server name
        spl_smtp_pdf_footer_enabled: 0 # 0 - disabled; 1- enabled
        spl_smtp_pdf_header_enabled: 0 # 0 - disabled; 1- enabled
        spl_smtp_pdf_image_renderring: 0 # 0 - disabled; 1- enabled
        spl_smtp_use_tls: 1 # 0 - disabled; 1- enabled
        spl_skip_restart: 0 # 1 - yes; 0 - no; Restart require but you can skip it

#Stage 14 :: Changing built-in indexes options
    - import_tasks: ./spl_change_builtin_indexes.yml
      vars:
        spl_index_frozen_in_secs: 2678400 # One month; Number of seconds after which indexed data rolls to frozen
        spl_skip_restart: 1
      when: group_names | select('regex', '^.*_(sh|mn)$') | list | count > 0

    - import_tasks: ./spl_idxc_change_builtin_indexes.yml
      vars:
        spl_index_frozen_in_secs: 2678400 # One month; Number of seconds after which indexed data rolls to frozen
      when: group_names | select('regex', '^.*_mn$') | list | count > 0